<Window x:Class="MGrep.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MGrep"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance local:MainWindowViewModel, IsDesignTimeCreatable=True}"
        d:DesignHeight="450"
        d:DesignWidth="800"
        Title="MGrep" 
        Height="450" 
        Width="800">

    <Window.Resources>
        <local:InvertedBoolConverter x:Key="InvertedBoolConverter" />
    </Window.Resources>
        
    <DockPanel LastChildFill="True">
        <Grid DockPanel.Dock="Top" Margin="4">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Orientation="Vertical">
                <Label>Folder</Label>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ComboBox Grid.Column="0" 
                              IsEditable="True"
                              ItemsSource="{Binding FolderHistory}"  
                              Text="{Binding Folder}" 
                              ShouldPreserveUserEnteredPrefix="True" />
                    <Button Grid.Column="1" Content="Browse" Command="{Binding SelectFolderCommand}" Margin="4,0,0,0" />
                </Grid>
            </StackPanel>

            <StackPanel Grid.Row="1" Orientation="Vertical">
                <Label>Pattern</Label>
                <ComboBox IsEditable="True" 
                          ItemsSource="{Binding PatternHistory}" 
                          Text="{Binding Pattern}" 
                          ShouldPreserveUserEnteredPrefix="True" />
            </StackPanel>

            <StackPanel Grid.Row="2" Orientation="Vertical">
                <Label>File patterns</Label>
                <ComboBox IsEditable="True" 
                          ItemsSource="{Binding FilePatternsHistory}" 
                          Text="{Binding FilePatterns}" 
                          ShouldPreserveUserEnteredPrefix="True" />
            </StackPanel>

            <Grid Grid.Row="3" Margin="0,4,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Orientation="Horizontal">
                    <ToggleButton IsChecked="{Binding MatchCase}" Content="Match case" />
                    <ToggleButton IsChecked="{Binding MatchWholeWord}" Content="Match whole word" Margin="4,0,0,0" />
                    <ToggleButton IsChecked="{Binding UseRegex}" Content="Use regular expression" Margin="4,0,0,0" />
                    <ToggleButton IsChecked="{Binding IncludeSubfolders}"
                                  IsEnabled="{Binding Globbing, Converter={StaticResource InvertedBoolConverter}}"
                                  Content="Include subfolders" Margin="12,0,0,0" />
                    <ToggleButton IsChecked="{Binding Globbing}" 
                                  IsEnabled="{Binding IncludeSubfolders, Converter={StaticResource InvertedBoolConverter}}"
                                  Content="Globbing" Margin="4,0,0,0" />
                    <ToggleButton IsChecked="{Binding IncludeBinaryFiles}" Content="Include binary files" Margin="12,0,0,0" />
                </StackPanel>
                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <Button IsDefault="True" Width="120" BorderThickness="2">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Content" Value="Search" />
                                <Setter Property="Command" Value="{Binding SearchCommand}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Searching}" Value="True">
                                        <Setter Property="Content" Value="Cancel"/>
                                        <Setter Property="Command" Value="{Binding SearchCancelCommand}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Command="{Binding ExportCommand}" Content="Export" Margin="4,0,0,0" />
                </StackPanel>
            </Grid>
        </Grid>

        <StatusBar DockPanel.Dock="Bottom"
                   Background="{DynamicResource {x:Static SystemColors.WindowBrush}}">
            <StatusBarItem>
                <TextBlock Text="{Binding Status}" />
            </StatusBarItem>
        </StatusBar>

        <ContentPresenter Content="{Binding}">
            <ContentPresenter.ContentTemplate>
                <DataTemplate>
                    <Grid Margin="4">
                        <ListView x:Name="List"
                                  ItemsSource="{Binding Matches}"
                                  IsSynchronizedWithCurrentItem="True"
                                  local:DoubleClickBehavior.Command="{Binding OpenCommand}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="File" DisplayMemberBinding="{Binding Name}" />
                                    <GridViewColumn Header="Line" DisplayMemberBinding="{Binding LineNumber}" />
                                    <GridViewColumn Header="Text" DisplayMemberBinding="{Binding Text}" />
                                </GridView>
                            </ListView.View>
                        </ListView>

                        <TextBlock x:Name="EmptyList" Text="No matches found" Visibility="Collapsed"/>
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Matches.Count}" Value="0">
                            <Setter TargetName="List" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="EmptyList" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ContentPresenter.ContentTemplate>
        </ContentPresenter>

    </DockPanel>
</Window>
